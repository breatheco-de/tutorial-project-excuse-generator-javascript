!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports["bc-console"]=r():e["bc-console"]=r()}(global,function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=1)}([function(e,r,t){var n={};e.exports=n,n.themes={};var o=t(4),i=n.styles=t(5),s=Object.defineProperties,u=new RegExp(/[\r\n]+/g);n.supportsColor=t(6).supportsColor,void 0===n.enabled&&(n.enabled=!1!==n.supportsColor()),n.enable=function(){n.enabled=!0},n.disable=function(){n.enabled=!1},n.stripColors=n.strip=function(e){return(""+e).replace(/\x1B\[\d+m/g,"")};n.stylize=function(e,r){return n.enabled?i[r].open+e+i[r].close:e+""};var a=/[|\\{}()[\]^$+*?.]/g;function l(e){var r=function e(){return function(){var e=Array.prototype.slice.call(arguments).map(function(e){return void 0!==e&&e.constructor===String?e:o.inspect(e)}).join(" ");if(!n.enabled||!e)return e;var r=-1!=e.indexOf("\n"),t=this._styles,s=t.length;for(;s--;){var a=i[t[s]];e=a.open+e.replace(a.closeRe,a.open)+a.close,r&&(e=e.replace(u,function(e){return a.close+e+a.open}))}return e}.apply(e,arguments)};return r._styles=e,r.__proto__=f,r}var c=function(){var e={};return i.grey=i.gray,Object.keys(i).forEach(function(r){i[r].closeRe=new RegExp(function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(a,"\\$&")}(i[r].close),"g"),e[r]={get:function(){return l(this._styles.concat(r))}}}),e}(),f=s(function(){},c);n.setTheme=function(e){if("string"!=typeof e)for(var r in e)!function(r){n[r]=function(t){if("object"==typeof e[r]){var o=t;for(var i in e[r])o=n[e[r][i]](o);return o}return n[e[r]](t)}}(r);else console.log("colors.setTheme now only accepts an object, not a string.  If you are trying to set a theme from a file, it is now your (the caller's) responsibility to require the file.  The old syntax looked like colors.setTheme(__dirname + '/../themes/generic-logging.js'); The new syntax looks like colors.setTheme(require(__dirname + '/../themes/generic-logging.js'));")};var p=function(e,r){var t=r.split("");return(t=t.map(e)).join("")};for(var d in n.trap=t(9),n.zalgo=t(10),n.maps={},n.maps.america=t(11)(n),n.maps.zebra=t(12)(n),n.maps.rainbow=t(13)(n),n.maps.random=t(14)(n),n.maps)!function(e){n[e]=function(r){return p(n.maps[e],r)}}(d);s(n,function(){var e={};return Object.keys(c).forEach(function(r){e[r]={get:function(){return l([r])}}}),e}())},function(e,r,t){e.exports=t(2)},function(e,r,t){t(3);e.exports=new class{constructor(){this.loading=null}log(e){if("string"==typeof e)return this.__print(` ➔ ${e}`);if("object"==typeof e)for(let r in e){if(void 0!==this[r])return this[r](e[r]);throw new Error("Invalid logging type: "+r)}}success(e=""){return this.__print(`${" ☺ Success ".bgGreen.white.bold} ${e.green}`)}info(e){return this.__print(`${" i info:".bgBlue.white.bold} ${e.blue}`)}warning(e){return this.__print(`${" ⚠ warning:".bgYellow.white.bold} ${e.yellow}`)}error(e){return this.__print(`${" ➔".red} ${e.red}`)}help(e){return this.__print(`${" ⚠ help:".bgGreen.white.bold} ${e.white}`)}todo(e){return this.__print(`${" ▶ TODOs found on:".bgBlue.white.bold} ${this.__todofy(e)}`)}done(e=""){return this.__print(`${" ✔ Done ".bgGreen.white.bold} ${e.green}`)}fatal(e){return this.__print(e.white.bgRed)}toCopy(e){return this.__print(`${" ✄ ".bgBlack.white.bold} ${(" "+e+" ").cyan.bold}`)}__print(e){console.log(this.__linkify(e))}__linkify(e){return e=(e=e.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,e=>e.underline.blue)).replace(/(\*\*\*)(.*)(\*\*\*)/gi,"$2".bold.yellow)}__todofy(e){return e=(e=(e=e.replace(/(.*).(js|jsx|php|py|html|css|scss|md)/gi,e=>e.underline)).replace(/line\s*(\d)\s*([a-zA-z]*)\s*(.*)/gi,`─ ${"line $1".bold.yellow}: ${"$2".red} ${"$3".cyan}`)).replace(/\s*✖\s*(\d)\s*(.*)\s*(found)/gi,"")}startLoading(){var e=["\\","|","/","-"],r=0;this.loading=setInterval(function(){process.stdout.write("\r"+e[r++]),r&=3},250)}stopLoading(){this.loading&&clearInterval(this.loading)}}},function(e,r,t){var n=t(0);e.exports=n,t(15)()},function(e,r){e.exports=require("util")},function(e,r){var t={};e.exports=t;var n={reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],grey:[90,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],blackBG:[40,49],redBG:[41,49],greenBG:[42,49],yellowBG:[43,49],blueBG:[44,49],magentaBG:[45,49],cyanBG:[46,49],whiteBG:[47,49]};Object.keys(n).forEach(function(e){var r=n[e],o=t[e]=[];o.open="["+r[0]+"m",o.close="["+r[1]+"m"})},function(e,r,t){"use strict";var n=t(7),o=t(8),i=process.env,s=void 0;function u(e){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(function(e){if(!1===s)return 0;if(o("color=16m")||o("color=full")||o("color=truecolor"))return 3;if(o("color=256"))return 2;if(e&&!e.isTTY&&!0!==s)return 0;var r=s?1:0;if("win32"===process.platform){var t=n.release().split(".");return Number(process.versions.node.split(".")[0])>=8&&Number(t[0])>=10&&Number(t[2])>=10586?Number(t[2])>=14931?3:2:1}if("CI"in i)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(function(e){return e in i})||"codeship"===i.CI_NAME?1:r;if("TEAMCITY_VERSION"in i)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(i.TEAMCITY_VERSION)?1:0;if("TERM_PROGRAM"in i){var u=parseInt((i.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(i.TERM_PROGRAM){case"iTerm.app":return u>=3?3:2;case"Hyper":return 3;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(i.TERM)?2:/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(i.TERM)?1:"COLORTERM"in i?1:(i.TERM,r)}(e))}o("no-color")||o("no-colors")||o("color=false")?s=!1:(o("color")||o("colors")||o("color=true")||o("color=always"))&&(s=!0),"FORCE_COLOR"in i&&(s=0===i.FORCE_COLOR.length||0!==parseInt(i.FORCE_COLOR,10)),e.exports={supportsColor:u,stdout:u(process.stdout),stderr:u(process.stderr)}},function(e,r){e.exports=require("os")},function(e,r,t){"use strict";e.exports=function(e,r){var t=(r=r||process.argv).indexOf("--"),n=/^-{1,2}/.test(e)?"":"--",o=r.indexOf(n+e);return-1!==o&&(-1===t||o<t)}},function(e,r){e.exports=function(e,r){var t="",n={a:["@","Ą","Ⱥ","Ʌ","Δ","Λ","Д"],b:["ß","Ɓ","Ƀ","ɮ","β","฿"],c:["©","Ȼ","Ͼ"],d:["Ð","Ɗ","Ԁ","ԁ","Ԃ","ԃ"],e:["Ë","ĕ","Ǝ","ɘ","Σ","ξ","Ҽ","੬"],f:["Ӻ"],g:["ɢ"],h:["Ħ","ƕ","Ң","Һ","Ӈ","Ԋ"],i:["༏"],j:["Ĵ"],k:["ĸ","Ҡ","Ӄ","Ԟ"],l:["Ĺ"],m:["ʍ","Ӎ","ӎ","Ԡ","ԡ","൩"],n:["Ñ","ŋ","Ɲ","Ͷ","Π","Ҋ"],o:["Ø","õ","ø","Ǿ","ʘ","Ѻ","ם","۝","๏"],p:["Ƿ","Ҏ"],q:["্"],r:["®","Ʀ","Ȑ","Ɍ","ʀ","Я"],s:["§","Ϟ","ϟ","Ϩ"],t:["Ł","Ŧ","ͳ"],u:["Ʊ","Ս"],v:["ט"],w:["Ш","Ѡ","Ѽ","൰"],x:["Ҳ","Ӿ","Ӽ","ӽ"],y:["¥","Ұ","Ӌ"],z:["Ƶ","ɀ"]};return(e=(e=e||"Run the trap, drop the bass").split("")).forEach(function(e){e=e.toLowerCase();var r=n[e]||[" "],o=Math.floor(Math.random()*r.length);t+=void 0!==n[e]?n[e][o]:e}),t}},function(e,r){e.exports=function(e,r){e=e||"   he is here   ";var t={up:["̍","̎","̄","̅","̿","̑","̆","̐","͒","͗","͑","̇","̈","̊","͂","̓","̈","͊","͋","͌","̃","̂","̌","͐","̀","́","̋","̏","̒","̓","̔","̽","̉","ͣ","ͤ","ͥ","ͦ","ͧ","ͨ","ͩ","ͪ","ͫ","ͬ","ͭ","ͮ","ͯ","̾","͛","͆","̚"],down:["̖","̗","̘","̙","̜","̝","̞","̟","̠","̤","̥","̦","̩","̪","̫","̬","̭","̮","̯","̰","̱","̲","̳","̹","̺","̻","̼","ͅ","͇","͈","͉","͍","͎","͓","͔","͕","͖","͙","͚","̣"],mid:["̕","̛","̀","́","͘","̡","̢","̧","̨","̴","̵","̶","͜","͝","͞","͟","͠","͢","̸","̷","͡"," ҉"]},n=[].concat(t.up,t.down,t.mid);function o(e){return Math.floor(Math.random()*e)}function i(e){var r=!1;return n.filter(function(t){r=t===e}),r}return function(e,r){var n,s,u="";for(s in(r=r||{}).up=void 0===r.up||r.up,r.mid=void 0===r.mid||r.mid,r.down=void 0===r.down||r.down,r.size=void 0!==r.size?r.size:"maxi",e=e.split(""))if(!i(s)){switch(u+=e[s],n={up:0,down:0,mid:0},r.size){case"mini":n.up=o(8),n.mid=o(2),n.down=o(8);break;case"maxi":n.up=o(16)+3,n.mid=o(4)+1,n.down=o(64)+3;break;default:n.up=o(8)+1,n.mid=o(6)/2,n.down=o(8)+1}var a=["up","mid","down"];for(var l in a)for(var c=a[l],f=0;f<=n[c];f++)r[c]&&(u+=t[c][o(t[c].length)])}return u}(e,r)}},function(e,r){e.exports=function(e){return function(r,t,n){if(" "===r)return r;switch(t%3){case 0:return e.red(r);case 1:return e.white(r);case 2:return e.blue(r)}}}},function(e,r){e.exports=function(e){return function(r,t,n){return t%2==0?r:e.inverse(r)}}},function(e,r){e.exports=function(e){var r=["red","yellow","green","blue","magenta"];return function(t,n,o){return" "===t?t:e[r[n++%r.length]](t)}}},function(e,r){e.exports=function(e){var r=["underline","inverse","grey","yellow","red","green","blue","white","cyan","magenta"];return function(t,n,o){return" "===t?t:e[r[Math.round(Math.random()*(r.length-2))]](t)}}},function(e,r,t){var n=t(0);e.exports=function(){var e=function(e,r){String.prototype.__defineGetter__(e,r)};e("strip",function(){return n.strip(this)}),e("stripColors",function(){return n.strip(this)}),e("trap",function(){return n.trap(this)}),e("zalgo",function(){return n.zalgo(this)}),e("zebra",function(){return n.zebra(this)}),e("rainbow",function(){return n.rainbow(this)}),e("random",function(){return n.random(this)}),e("america",function(){return n.america(this)}),Object.keys(n.styles).forEach(function(r){e(r,function(){return n.stylize(this,r)})}),n.setTheme=function(r){"string"!=typeof r?function(r){var t=["__defineGetter__","__defineSetter__","__lookupGetter__","__lookupSetter__","charAt","constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf","charCodeAt","indexOf","lastIndexOf","length","localeCompare","match","repeat","replace","search","slice","split","substring","toLocaleLowerCase","toLocaleUpperCase","toLowerCase","toUpperCase","trim","trimLeft","trimRight"];Object.keys(r).forEach(function(o){if(-1!==t.indexOf(o))console.log("warn: ".red+("String.prototype"+o).magenta+" is probably something you don't want to override.  Ignoring style name");else{if("string"==typeof r[o])n[o]=n[r[o]];else{for(var i=n[r[o][0]],s=1;s<r[o].length;s++)i=i[r[o][s]];n[o]=i}e(o,function(){return n[o](this)})}})}(r):console.log("colors.setTheme now only accepts an object, not a string. If you are trying to set a theme from a file, it is now your (the caller's) responsibility to require the file.  The old syntax looked like colors.setTheme(__dirname + '/../themes/generic-logging.js'); The new syntax looks like colors.setTheme(require(__dirname + '/../themes/generic-logging.js'));")}}}])});